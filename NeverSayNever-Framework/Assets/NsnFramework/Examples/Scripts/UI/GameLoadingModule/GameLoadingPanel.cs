//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NeverSayNever.Example
{
    using System;
    using System.Collections.Generic;
    using UnityEngine;
    using UnityEngine.UI;
    using TMPro;
    using NeverSayNever.Core;
    using NeverSayNever.Core.HUD;
    using System.Collections;

    public partial class GameLoadingPanel : NeverSayNever.Core.HUD.UIBasePanel
    {
        private GameLoadingMessenger messenger;

        private float loadProgress = 0;
        private float showProgress = 0;
        private bool isLoading = false;

        protected override void OnAwake()
        {
            base.OnAwake();
            messenger = UIManager.Instance.GetUIMessenger<GameLoadingMessenger>(UIModuleDefine.GameLoading);
        }
        
        protected override void OnStart()
        {
            base.OnStart();
            ResetLoading();
            CoroutineManager.Instance.AddCoroutine(Coroutine_SceneLoading());
            //StartCoroutine(Coroutine_SceneLoading());
        }

        protected override void OnShow()
        {
            base.OnShow();
        }

        private IEnumerator Coroutine_SceneLoading()
        {
            loadProgress = messenger.operation.progress * 100;
            if (loadProgress >= 90)
                loadProgress = 100;

            while (showProgress < loadProgress)
            {
                showProgress += 1;
                ShowSceneLoadingProgress();
                messenger.OnLoading();
                yield return null;
            }
            messenger.OnLoadComplete();
        }

        private void ShowSceneLoadingProgress()
        {
            tmp_progress.text = $"{showProgress} %";
            slider_progress.value = showProgress / 100;
        }

        private void ResetLoading()
        {
            showProgress = 0;
            loadProgress = 0;
            isLoading = true;
        }
    }
}
