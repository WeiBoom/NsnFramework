using UnityEngine;
using System.Collections;
using XLua;
using System.Collections.Generic;
using System;

[LuaCallCSharp]
public static class LuaCallCsList
{
    //lua中要使用到C#库的配置，比如C#标准库，或者Unity API，第三方库等。
    [LuaCallCSharp]
    public static List<Type> LuaCallCSharp = new List<Type>() {
        typeof(System.Object),
        typeof(UnityEngine.Mathf),
        typeof(UnityEngine.Object),
        typeof(Vector2),
        typeof(Vector3),
        typeof(Vector4),
        typeof(Screen),
        typeof(Application),
        typeof(RuntimePlatform),
        typeof(Quaternion),
        typeof(Color),
        typeof(Ray),
        typeof(Bounds),
        typeof(Camera),
        typeof(Screen),
        typeof(Ray2D),
        typeof(Time),
        typeof(UnityEngine.Random),
        typeof(GameObject),
        typeof(Component),
        typeof(Behaviour),
        typeof(Transform),
        typeof(Resources),
        typeof(TextAsset),
        typeof(Keyframe),
        typeof(AnimationCurve),
        typeof(AnimationClip),
        typeof(MonoBehaviour),
        typeof(ParticleSystem),
        typeof(SkinnedMeshRenderer),
        typeof(Renderer),
        typeof(MeshRenderer),
        typeof(RenderTexture),
        typeof(Collider),
        typeof(MeshCollider),
        typeof(BoxCollider),
        typeof(SphereCollider),
        typeof(CapsuleCollider),
        typeof(WheelCollider),
        typeof(Rigidbody),
        typeof(PrimitiveType),
        typeof(WrapMode),
        typeof(UnityEngine.Random),
        typeof(UnityEngine.PlayerPrefs),

        typeof(Animator),
        typeof(Animation),
        typeof(Material),

        typeof(Rigidbody2D),
        typeof(EdgeCollider2D),
        typeof(Collider2D),
        typeof(BoxCollider2D),
        typeof(PolygonCollider2D),
        typeof(CapsuleCollider2D),
        typeof(CircleCollider2D),
        typeof(Collision2D),
        typeof(UnityEngine.AI.NavMesh),
        typeof(UnityEngine.AI.NavMeshAgent),
        typeof(UnityEngine.AI.NavMeshHit),
        typeof(UnityEngine.AI.NavMeshPath),
        typeof(UnityEngine.AI.NavMeshPathStatus),
        typeof(UnityEngine.AI.ObstacleAvoidanceType),
        typeof(UnityEngine.AI.NavMeshObstacleShape),
        typeof(UnityEngine.AI.NavMeshTriangulation),
        typeof(UnityEngine.AI.OffMeshLink),
        typeof(UnityEngine.AI.OffMeshLinkData),
        typeof(UnityEngine.AI.OffMeshLinkType),
        typeof(UnityEngine.AI.NavMeshQueryFilter),


        typeof(UnityEngine.SceneManagement.LoadSceneMode),
        typeof(System.Collections.Generic.List<int>),
        typeof(Action<string>),
        typeof(UnityEngine.Debug),
        typeof(LayerMask),
        typeof(Texture2D),
        typeof(Texture),
        typeof(Input),
        typeof(DG.Tweening.RotateMode),
        typeof(DG.Tweening.TweenSettingsExtensions),
        typeof(DG.Tweening.Tweener),
        typeof(Space),
        typeof(Animation),
        typeof(WaitForSeconds),
        typeof(List<string>),
        // 自定义类型
        typeof(NeverSayNever.Core.UIManager),
        typeof(NeverSayNever.Core.Asset.ResourceManager),
    };

    //C#静态调用Lua的配置（包括事件的原型），仅可以配delegate，interface
    [CSharpCallLua]
    public static List<Type> CSharpCallLua = new List<Type>() {
        typeof(DG.Tweening.TweenCallback),
        typeof(Action< int, object>),
        typeof(Action),
        typeof(Action<int>),
        typeof(Action<long>),
        typeof(Action<GameObject,long>),
        typeof(Action<GameObject,int>),
        typeof(Action<GameObject>),
        typeof(Action<Transform>),
        typeof(Func<double, double, double>),
        typeof(Action<string,float>),
        typeof(Action<string,int>),
        typeof(Action<string,string>),
        typeof(Action<string,bool>),
        typeof(Action<string>),
        typeof(Action<double>),
        typeof(Action<bool>),
        typeof(Action<float>),
        typeof(UnityEngine.Events.UnityAction),
        typeof(Action<LuaTable,object>),
        typeof(Action<LuaTable,float>),
        typeof(Action<LuaTable,int,object>),
        typeof(Action<LuaTable,NeverSayNever.Core.HUD.UIPanelMessengerForLua>),
        typeof(Action<uint,byte[]>),
        typeof(Action<LuaTable>),
        typeof(Action<object>),
        typeof(Action<int>),
       typeof(Action<int,byte[]>),
       typeof(Action<Vector3>),
       typeof(Action<Texture2D>),
       typeof(Action<Collider>),
       typeof(Action<Collision2D>),
       typeof(Action<GameObject,Collision2D>),
       typeof(Action<int,string>),
       typeof(Action<string,string>),
       typeof(Action<string,int>),
       typeof(Action<float,int>),
       typeof(Action<float,float>),
       typeof(Action<float,string>),
       typeof(Action<string,float>),
    };

    //黑名单
    [BlackList]
    public static List<List<string>> BlackList = new List<List<string>>()  {
        new List<string>(){ "UnityEngine.WWW","GetMovieTexture"},
        new List<string>(){ "UnityEngine.Texture", "imageContentsHash"},
        new List<string>(){"UnityEngine.Input", "IsJoystickPreconfigured","System.String"},
        new List<string>(){"UnityEngine.WWW", "movie"},
        new List<string>(){"UnityEngine.Texture2D", "alphaIsTransparency"},
        new List<string>(){"UnityEngine.Security", "GetChainOfTrustValue"},
        new List<string>(){"UnityEngine.CanvasRenderer", "onRequestRebuild"},
        new List<string>(){"UnityEngine.Light", "areaSize"},
        new List<string>(){"UnityEngine.AnimatorOverrideController", "PerformOverrideClipListCleanup"},
        new List<string>(){"UnityEngine.Application", "ExternalEval"},
        new List<string>(){"UnityEngine.GameObject", "networkView"}, //4.6.2 not support
        new List<string>(){"UnityEngine.Component", "networkView"},  //4.6.2 not support
        new List<string>(){"System.IO.FileInfo", "GetAccessControl", "System.Security.AccessControl.AccessControlSections"},
        new List<string>(){"System.IO.FileInfo", "SetAccessControl", "System.Security.AccessControl.FileSecurity"},
        new List<string>(){"System.IO.DirectoryInfo", "GetAccessControl", "System.Security.AccessControl.AccessControlSections"},
        new List<string>(){"System.IO.DirectoryInfo", "SetAccessControl", "System.Security.AccessControl.DirectorySecurity"},
        new List<string>(){"System.IO.DirectoryInfo", "CreateSubdirectory", "System.String", "System.Security.AccessControl.DirectorySecurity"},
        new List<string>(){"System.IO.DirectoryInfo", "Create", "System.Security.AccessControl.DirectorySecurity"},
        new List<string>(){"UnityEngine.MonoBehaviour", "runInEditMode"},
            };
}
